/////////////////////////////
// BuildScript and Plugins //
/////////////////////////////

buildscript {
    repositories {
        jcenter()
        maven {
            name 'Forge'
            url 'http://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.11"
    id "com.github.hierynomus.license" version "0.15.0"
}

apply plugin: 'net.minecraftforge.gradle.forge'

//////////////////
// Dependencies //
//////////////////

repositories {
    jcenter()
    maven {
        url 'http://maven.shadowfacts.net/'
    }

    maven {
        url "https://dl.bintray.com/s1m0nw1/KtsRunner"
    }
}

dependencies {
    compile group: 'net.shadowfacts', name: 'Forgelin', 'version': forgelin_version

    compile("de.swirtz:ktsRunner:0.0.7")
}

minecraft {
    version = "$minecraft_version-$forge_version"
    mappings = "$forge_mappings"
    runDir = "run"

    replaceIn "Makro.kt"
    replace "@VERSION@", project.version
}

///////////////
// Artifacts //
///////////////

tasks {
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

version = "$minecraft_version-$mod_version"

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
            classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
            classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives deobfJar
    archives sourcesJar
    archives javadocJar
}


///////////////
// Licencing //
///////////////

license {
    include "**/*.kt"
}
